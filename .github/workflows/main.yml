name: App Review Guidelines History
on:
  schedule:
    - cron: '0 0,8,16 * * *'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git check-out
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '23.x'
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm packages
        run: npm install
      - name: Install npm xvfb
        run: sudo apt-get install xvfb
      - name: Check updates
        run: xvfb-run --server-args="-screen 0 1600x1200x24" --auto-servernum node --harmony index.js
      - name: Git check-in
        id: git-check-in
        if: success()
        env:
          GIT_OWNER_EMAIL: ${{ secrets.GIT_OWNER_EMAIL }}
          PUSH_TOKEN: ${{ secrets.PUSH_TOKEN }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          git config user.email "$GIT_OWNER_EMAIL"
          git config user.name "cafedeichi"
          if [[ `git status --porcelain` ]]; then
              git add .
              git commit -a -m "Updated some contents."
              git remote rm origin
              git remote add origin https://cafedeichi:$PUSH_TOKEN@github.com/cafedeichi/AppStoreReviewGuidelinesHistory.git
              git push origin HEAD:master
              echo "Updates found."
              echo "updated=true" >> $GITHUB_ENV
          else
              echo "Updates not found."
              echo "updated=false" >> $GITHUB_ENV
          fi
      - name: Slack notification
        if: success() && env.updated == 'true'
        env:
          CHANNEL: "#ios_knowledge"
          USERNAME: "App Review Guidelines History"
          ICON_EMOJI: ":apple:"
          TEXT_TITLE: "New update to the App Review Guidelines detected."
          TEXT_BODY: "https://github.com/cafedeichi/AppStoreReviewGuidelinesHistory/commits/master"          
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}          
        run: |
          curl -X POST \
          --data-urlencode \
          "payload={\"channel\": \"$CHANNEL\", \"username\": \"$USERNAME\", \"text\": \"$TEXT_TITLE\n$TEXT_BODY\", \"icon_emoji\": \"$ICON_EMOJI\"}" \
          "$WEBHOOK_URL"
